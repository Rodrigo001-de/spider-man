.container {
  max-width: 1440px;
  margin: 0 auto;

  padding: 36px 16px;

  // todos os elementos que passarem do max-width(1440px) é para esconder
  overflow: hidden;

  display: flex;
  // o padrão do display flex é row, eu estou colocando isso porque quando for
  // aplicar responsividade para o mobile eu vou colocar flex-direction: column
  flex-direction: row;
  // horizontal
  align-items: center;
  // vertical
  // justify-content: center;
}

.container-item-1 {
  max-width: 576px;

  display: flex;
  flex-direction: column;
  // nesse caso o align-items muda de direção, porque eu coloquei o flex-direction
  // como column
  align-items: flex-start;
}

.flex {
  display: flex;
}

// essa classe é para forçar que o tamanho do elemento das divs do ps e da marvel
// esteja do tamanho automatico do svg
.w-auto {
  width: auto;
}

.align-items-center {
  align-items: center;
}

.spiderman {
  width: 150%;
  transform: translate3d(-170px, 0, 0);
}

.btn {
  display: inline-block;

  padding: 12px 32px;
  border-radius: 3px;

  transform: skewX(-10deg);
  transition: .7s ease;

  text-transform: uppercase;
  background: linear-gradient(225deg, #EA1D22 0%, #B31317 100%);

  position: relative;

  &::after {
    content: '';
    display: block;
    position: absolute;
    top: -2px;
    left: -2px;

    width: 30%;
    height: 70%;
    opacity: 0;
    transition: .7s ease;

    border-radius: 3px;

    border-top: 3px solid #FFF;
    border-left: 3px solid #FFF;
  }

  &::before {
    content: '';
    display: block;
    position: absolute;
    bottom: -2px;
    right: -2px;

    width: 30%;
    height: 70%;
    opacity: 0;
    transition: .7s ease;

    border-radius: 3px;

    border-bottom: 3px solid #FFF;
    border-right: 3px solid #FFF;
  }

  &:hover {
    transform: skewX(-10deg) scale(1.05);
    &::after {
      opacity: 1;
    }

    &::before {
      opacity: 1;
    }
  }
}

.btn-secondary {
  display: inline-block;

  padding: 10px 32px;
  border-radius: 3px;

  transform: skewX(-10deg);
  transition: .7s ease;

  text-transform: uppercase;
  background: transparent;

  position: relative;

  border: 2px solid $red;

  &::after {
    content: '';
    display: block;
    position: absolute;
    top: -1px;
    left: -1px;

    z-index: -1;

    width: 0%;
    height: 103%;
    transition: .7s ease;

    background: linear-gradient(225deg, #EA1D22 0%, #B31317 100%);
  }

  &:hover {
    &::after {
      width: 102%;
    }
  }
}
